//===============================================================
// Алгоритм
//===============================================================
1) Объявляем переменные и массивы данных
     > N        : integer : кол-во вводимых строк входных данных
     > i        : integer : вспомогательный счетчик (на подхвате)
     > s        : string  : текущая вводимая строка
     > space    : integer : для нарезки строки, счетчик пробелов
     > counter  : integer : кол-во уже внесенных в список школ
     > sch[X]   : list    : список школ и частоты их появления
                : ------- : равно двум массивам num[X] и count[X]
     > transact : boolean : переменная-флаг обработки данных
//===============================================================
2) Вводим N
3) Запускаем цикл на N итераций
4) Вводим строку s
5) Режем строку s, выкидывая все до номера школы
   1. Инициализируем переменную space = 0
   2. Запускаем цикл, отсчитывая позицию 2-го пробела
   3. Копируем все от пробела до конца строки в s
6) Поднимаем флаг transact в значение "нет"
7) Проводим проверку, есть ли введенная школа в списке
   1. Запускаем цикл от 0 до counter (и ограничивая transact)
   2. Сравниваем все номера школ из списка (sch[i].num) с s
   3. Если совпало - опускаем флаг и увеличиваем счетчик школы
8) Если transact все еще в значении "нет" то заносим s в список
   1. sch[counter].num = s;   - заносим в новый элемент номер шк
   2. sch[counter].count = 1; - присваиваем счетчику школы - 1
   3. увеличиваем счетчик списка counter на единицу
9) Следующая итерация цикла из пункта 3 ...
//===============================================================
10) Если необходимо - сортируем массив данных 
11) Выводим список школ циклом от 0 до counter
//===============================================================
