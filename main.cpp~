#include <iostream>
#include <string>
#define MXS 1000     // Максимальное кол-во вводимых школ
using namespace std;
//=========================================================
class list {         // Шаблон класса для замены структуры
 public:             // вида: string num[x]; int count[x];
  string num;        // на струтуру вида:
  int count;         // list y[x]; (y[x].num, y[x].count)
  list();            // инициализция этой стуктуры
};
//---------------------------------------------------------
list::list() {       // вынес инициализацию объекта сюда
 num = "";           // изначальное значение num - пусто
 count = 0;          // изначальное значение count - 0
}
//=========================================================
int main()
{
 int N, counter = 0, i; // counter, счетчик известных школ
 cin >> N;              // N - кол-во вводимых строк
 list sch[MXS];         // список известных школ (массив)
 string s;              // очередная вводимая строка
 getline(cin, s);       // устраняем из ввода переменную N
 //========================================================
 while (N > 0) {        // покуда мы не ввели все строки
  //=======================================================
  N--;                  // уменьшаем счетчик
  getline(cin, s);      // вводим строку
  //=======================================================
  int space = 0;        // номер пробела
  //-------------------------------------------------------
  for (i = 0; (i < s.length())&&(space < 2); i++)
   if (s[i] == ' ') space++;
  //-------------------------------------------------------
  s = s.substr(i);      // тут i - позиция второго пробела
  //=======================================================
  int transact = false; // transact- транзакция проведена?
  //-------------------------------------------------------
  for (i = 0; (i < counter)&&(!transact); i++) {
   if (s == sch[i].num) { // проходимся по всему списку
    sch[i].count++;       // и ищем совпадения номеров
    transact = true;      // если нашли - счетчик школ ++
   }
  }
  //=======================================================
  if (!transact) {        // Если транзакция еще не прошла
   sch[counter].num = s;  // заносим в список новые данные
   sch[counter].count = 1;
   counter++;             // и увеличиваем счетчик списка
  }
  //=======================================================
 }
 for (i = 0; i < counter; i++)     // проходимся по списку
  cout << sch[i].num << " " << sch[i].count << endl;
 //========================================================
 return 0;
}
//                                             By SnipGhost
//=========================================================
